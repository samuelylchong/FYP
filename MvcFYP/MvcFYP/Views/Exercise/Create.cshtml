@model MvcFYP.ViewModels.ExerciseViewModel

@{
    ViewBag.Title = "Create";
}

@{
    if (Session["userID"] == null || (string)Session["role"] != "Lecturer")
    {
        <script>
            $(document).ready(function () {
                alert('Not Authorized');
                window.location.href = "../Login/Index";
            });
        </script>
        //Response.Redirect("~/Login/Index");
    }
}

<br>
<h2>New Exercise</h2>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Exercise.Id)
    @Html.HiddenFor(model => model.Exercise.ExampleID)
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Exercise.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Exercise.Question, new { @class = "textarea-size", @cols = 200, @rows = 4 })
                @Html.ValidationMessageFor(model => model.Exercise.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exercise.FinalAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Exercise.FinalAnswer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Exercise.FinalAnswer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Exercise.Hint, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Exercise.Hint, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Exercise.Hint, "", new { @class = "text-danger" })
            </div>
        </div>
        <br>

        <div class="form-group">
            @Html.LabelFor(model => model.Exercise.SelectionList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Exercise.SelectionList, new { @class = "textarea-size2", @placeholder = "E.g. Answer1,Answer2,Answer3,Answer4", @cols = 100, @rows = 4 })
                @Html.ValidationMessageFor(model => model.Exercise.SelectionList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


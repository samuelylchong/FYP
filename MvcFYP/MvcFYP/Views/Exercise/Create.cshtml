@model MvcFYP.ViewModels.ExerciseViewModel

@{
    ViewBag.Title = "Create";
}

@{
    if (Session["userID"] == null || ((string)Session["role"] != "Lecturer" && (string)Session["role"] != "Admin"))
    {
        <script>
            $(document).ready(function () {
                alert('Not Authorized');
                window.location.href = "../Login/Index";
            });
        </script>
        //Response.Redirect("~/Login/Index");
    }
}

@*CODE MIRROR*@
<script src="~/Scripts/codemirror-2.37/lib/codemirror.js"></script>
<link href="~/Scripts/codemirror-2.37/lib/codemirror.css" rel="stylesheet" />
<script src="~/Scripts/codemirror-2.37/mode/clike/clike.js"></script>

<br>
<h2>New Exercise</h2>
<hr>
<br>

<div class="clearfix">

    <div class="form-group float-left" style="margin-left: -10%">
        <div class="col-md-10" style="font-size: 17px; margin-left: -2%;">
            @Html.TextAreaFor(model => model.Exercise.Example.Answer, new { id = "codeEditor" })
        </div>
    </div>

    <script>
        var editor = CodeMirror.fromTextArea
            (document.getElementById('codeEditor'), {
                lineNumbers: true,
                mode: "clike",
                readOnly: true,
            });
        editor.setSize(600, 600);
    </script>

    <div class="float-right">
        @using (Html.BeginForm())
        {
            @Html.HiddenFor(model => model.Exercise.Id)
            @Html.HiddenFor(model => model.Exercise.ExampleID)
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Question, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Exercise.Question, new { @class = "textarea-size2", @cols = 100, @rows = 4 })
                        @Html.ValidationMessageFor(model => model.Exercise.Question, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Hint, htmlAttributes: new { @class = "control-label col-md-2" })
                    <text style="color: deepskyblue; float: right; margin-right: 45%">(Optional)</text>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Exercise.Hint, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Exercise.Hint, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br>

                @*ANSWER*@
                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Answer1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 float-right">
                        @Html.EditorFor(model => model.Exercise.Answer1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Exercise.Answer1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Answer2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 float-right">
                        @Html.EditorFor(model => model.Exercise.Answer2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Exercise.Answer2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Answer3, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 float-right">
                        @Html.EditorFor(model => model.Exercise.Answer3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Exercise.Answer3, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Exercise.Answer4, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 float-right">
                        @Html.EditorFor(model => model.Exercise.Answer4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Exercise.Answer4, "", new { @class = "text-danger" })
                    </div>
                </div>

                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Answer1",
                        Value = "Answer1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Answer2",
                        Value = "Answer2",
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Answer3",
                        Value = "Answer3"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Answer4",
                        Value = "Answer4"
                    });
                }

                <br>
                <div class="form-group" style="width:170%">
                    @Html.LabelFor(model => model.Exercise.CorrectAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10 float-right">
                        @Html.DropDownListFor(model => model.Exercise.CorrectAnswer, listItems, "-- Select Answer --")
                    </div>
                    <p style="font-size: 13px; color: orangered; margin-left: 1.5%;">Note: Correct Answer is not editable after submission. Choose carefully!</p>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

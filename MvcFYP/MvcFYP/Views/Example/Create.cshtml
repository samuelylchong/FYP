@model MvcFYP.ViewModels.ExampleViewModel

@{
    ViewBag.Title = "Create";
}

@{
    if (Session["userID"] == null || (string)Session["role"] != "Lecturer" || (string)Session["role"] != "Admin")
    {
        <script>
            $(document).ready(function () {
                alert('Not Authorized');
                window.location.href = "../Login/Index";
            });
        </script>
        //Response.Redirect("~/Login/Index");
    }
}

<br><br>
<h2>New Example</h2>

<script src="~/Scripts/codemirror-2.37/lib/codemirror.js"></script>
<link href="~/Scripts/codemirror-2.37/lib/codemirror.css" rel="stylesheet" />
<link href="~/Scripts/codemirror-2.37/theme/twilight.css" rel="stylesheet" />
<script src="~/Scripts/codemirror-2.37/mode/clike/clike.js"></script>

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.Example.Id)
    @Html.HiddenFor(model => model.Example.TopicID)

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Example.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 float-right">
                @Html.EditorFor(model => model.Example.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Example.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Example.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 float-right">
                @Html.TextAreaFor(model => model.Example.Question, new { @class = "textarea-size2", @cols = 200, @rows = 4 })
                @Html.ValidationMessageFor(model => model.Example.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <br><br><br>
        <div class="form-group">
            @Html.LabelFor(model => model.Example.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="font-size: 17px">
                @Html.TextAreaFor(model => model.Example.Answer, new { id = "codeEditor" })
            </div>
        </div>

        <script>
            var editor = CodeMirror.fromTextArea
                (document.getElementById('codeEditor'), {
                    lineNumbers: true,
                    theme: "twilight",
                    mode: "clike",
                });
            editor.setSize(740, 450);
        </script>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>
    </div>
}